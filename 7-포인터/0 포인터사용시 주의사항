<주의점>

-초기화하지않고 사용하기
int *p;
*p=100;
이렇게 사용할 경우 포인터p는 임의의 주소를 가르키고있다.
만약 우연히 중요한 영역을 가르키고 있었다면 프로그램의 중대한 문제가 생길 수있다
int *p=NULL; <- 이렇게 사용해주길 바란다.(NULL은 정수0과 같다)
주소 0은 보통 cpu가 사용하는 영역이라 주소0을 엑세스하려고하면 자동적으로 오류로감지하고 해결해준다.

-배열의 이름은 배열의 첫원소주소와같음
int a[3] = { 1,2,3 };
printf("%u   %u", a,&a[0]);
두 출력값은 같다.

-포인터변수의 연산
int a[4]={10,15,20,25};
int *p[4]=NULL;
p[0]=a;
p[1]=a+1;
여기서 int 형이므로 p[1]은 p[0]보다 4바이트 뒤이므로 +4를 해야할거같지만
+1해도 그 변수의 자료형만큼 주소값에 알아서 더해서 들어가진다
반대로 p[0]-p[1]을 해도 int형이므로 4바이트 차이니 -3이 나올거같지만
-1이 나온다.

-포인터를 배열처럼
int a[3] = { 1,2,3 };
int* p = NULL;
p = a;
printf("%d   %d   %d", p[0], a[0],p[2]);
이렇게 배열을 가르키면 원소에 접근가능하다.
