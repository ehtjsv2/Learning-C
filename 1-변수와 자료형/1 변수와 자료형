<배운점>

-왜 다양한 자료형을 사용하는가??
그 이유는 메모리 절약과 속도향상.

-int와 long
int 와 long 은 둘다 4byte로 별 다를게 없어보인다.
하지만 int는 CPU의 레지스터와 동일한 크기를 가진다.(레지스터란 CPU의 임시기억장소)
그러므로 32bit운영체제에서는 32bit로, 64bit운영체제에서는 64bit의 크기를 가진다.
반면에 long 은 32bit(4byte) 고정이다.

-char
char는 1byte의 크기를 가지며 문자형과 정수형 둘다 가능하다
출력 시, 문자형 ->%c 정수형 -> %d

-unsigned(부호없는)
부호없는 자료형의 출력 시 서식문자(%)는 다르니 참고필요.

-부동소수점형(더 공부할 필요있음.)
float는4바이트
double은 8바이트
long double은 8바이트

-기호상수 #define 과 const
#define 변수이름 상수
를 사용하면 프로그램이 동일한 상수를 여러곳에 사용할 경우 상수 값의 변경을 쉽게 할 수 있다.
const 자료형 변수이름 수
또한 동일하다.
---------------------------------------------------------------------------------------------------------------------------------------------------------
<오류사항>

long long 자료형을% d로 출력하려니 0으로만 출력된다.
->long long 은 %lld로 출력해야한다.
---------------------------------------------------------------------------------------------------------------------------------------------------------
<코드>

#include<stdio.h>
#include<math.h>

main() {

	// 정수형
	char a0;
	short a1;
	int a2;
	long a3;
	long long a4;

	//일부러 최대 보다 1넘게하여 최대치보다 1증가해서 음수로 갔는지 확인
	//실제로 최대치는 ex)N bit일경우 => -(2^N-1) ~ (2^N-1)-1
	//부호없는(unsigned)의 경우 => 0~(2^N)-1

	a0 = pow(2, 8 - 1);  // char는 1byte형(4bit) 정수
	a1 = pow(2, 16 - 1); // short는 2byte형(16bit) 정수
	a2 = pow(2, 32 - 1); // int는 4byte형(32bit) 정수
	a3 = pow(2, 32 - 1); // long은 4byte형(32bit) 정수
	a4 = pow(2, 64 - 1); // long long 은 8byte형(64bit) 정수
	
	printf("a0= %d (자료형 크기는 %d)\n", a0,(int)sizeof(a0));
	printf("a1= %d (자료형 크기는 %d)\n", a1, (int)sizeof(a1)); //%d 는 decimal 의 약자이다
	printf("a2= %d (자료형 크기는 %d)\n", a2, (int)sizeof(a2));
	printf("a3= %ld (자료형 크기는 %d)\n", a3, (int)sizeof(a3)); //long을 출력할 때는 %ld 를 사용한다(long decimal)
	printf("a4= %lld (자료형 크기는 %d)\n", a4, (int)sizeof(a4)); //long long 을 출력할 때는  %lld 를 사용한다(long long decimal)

}
---------------------------------------------------------------------------------------------------------------------------------------------------------
